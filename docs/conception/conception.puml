@startuml conception


package user {

    class User {
        - String username 
        - String password 
        + void connecter()
        + void inscrire()
    }

    class Profil {
        - String nom 
        - String prenom 
        - String email 
        - String motDePasse
        + void afficherProfil()
        + void modifierProfil()

    }


    ' class DonneSante {
    '     - String id 
    '     - Date date 
    '     - float frequenceCardiatique
    '     - float seuilFrequenceCardiatique
    '     - float tensionArterielle
    '     - float seuilTensionArterielle
    '     - float niveauGlucose 
    '     - float seuiNiveau
    '     + void afficher()
    '     + void collecter() 
    ' }





}

package DonnesSante {

    class Sante {
        - String nom 
        - float seuil 

    }

    class MesureSante {
        - String id 
        - Date dateDeMesure 
        - float mesure
        + collecter()
        + envoyer()
        + afficher()
        
    }

    Sante "1..1" *-- "1..*" MesureSante

}

MesureSante -- User

' package pageDePresentation {
'     class Header {
'         - String title 
'         - Image logo 
        

'     }

'     class Navigation {
'         - Button explore
'         - Button login 
'         - Button signUp
'     }

'     class Section {
'         - Image imageSection
'         - String descriptionGras 
'         - String description
'         - Button tryIt 
'     }

'     Header "1" *-- "1" Navigation 
' }


package NotificationUser {


    abstract class AbstractNotif {

        - String id 
        - String type 
        - String message 
    }

    class Notification {
        - Date dateNotif
        + void envoyer()
        + void afficher()
    }

    class Alerte {
        
        - float seuilAlerte 
        + void configurer()
        + void envoyer()
    }

    AbstractNotif <|-- Alerte
    AbstractNotif <|-- Notification



}





package ConnexionAvceBluettoth {

    class BluetoothManager  {
        - Array<Device> devices
        - Device connectedDevice
        +  void scanForDevices()
        + void connectToDevice(device: Device)
        + void disconnectDevice(()
    }

    class Device {
        - String id 
        - String name 
        - String rssi 
        + void getServices()
    }

    class Connection {
        - Device device
        - Boolean status
        + void readCharacteristic(service: BluetoothService, characteristic: string)
        + void writeCharacteristic(service: BluetoothService, characteristic: string, value: any)

    }

    class BluetoothService {
        - String uuid
        - Array<String> characteristics
        + String getCharacteristic(characteristic: string)
    }

    BluetoothManager "1..*" -- Device
    Connection  -- Device
    BluetoothService -- Connection
     mche6 mek 

}








User "1" *-- "1" Profil
Sante -- BluetoothManager
Alerte -- Notification

AbstractNotif -- Sante
AbstractNotif -- User



@enduml